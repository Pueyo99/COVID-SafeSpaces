Index: app/src/main/java/com/example/covidsafespaces/ServerConnection.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.covidsafespaces;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.content.Context;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.graphics.Color;\r\nimport android.graphics.Matrix;\r\nimport android.media.ExifInterface;\r\nimport android.os.Looper;\r\nimport android.provider.SyncStateContract;\r\nimport android.util.Base64;\r\nimport android.util.Log;\r\nimport android.view.Gravity;\r\nimport android.view.ViewGroup;\r\nimport android.view.Window;\r\nimport android.view.WindowManager;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.TextView;\r\n\r\nimport org.jetbrains.annotations.NotNull;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.io.BufferedReader;\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.io.DataOutputStream;\r\nimport java.io.IOException;\r\nimport java.io.InputStreamReader;\r\nimport java.io.OutputStream;\r\nimport java.io.OutputStreamWriter;\r\nimport java.net.HttpURLConnection;\r\nimport java.net.MalformedURLException;\r\nimport java.net.URL;\r\n\r\nimport okhttp3.Call;\r\nimport okhttp3.Callback;\r\nimport okhttp3.MediaType;\r\nimport okhttp3.OkHttpClient;\r\nimport okhttp3.Request;\r\nimport okhttp3.RequestBody;\r\nimport okhttp3.Response;\r\n\r\n\r\npublic class ServerConnection {\r\n    //private final String serverURL = \"http://paeaccenture.pagekite.me/\";\r\n    private final String serverURL = \"http://98972deb0cc1.eu.ngrok.io/\";\r\n    //private final String serverURL = \"http://192.168.1.202:5000/\";\r\n\r\n\r\n    public void postImage(final byte[] image, final String filename, final int rotation){\r\n        new Thread(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                OkHttpClient client = new OkHttpClient();\r\n\r\n                JSONObject data = new JSONObject();\r\n                try {\r\n                    data.put(\"image\",Base64.encodeToString(image, Base64.DEFAULT));\r\n                    data.put(\"filename\", filename);\r\n                    data.put(\"rotation\", rotation);\r\n                } catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n                RequestBody body = RequestBody.create(data.toString(),MediaType.parse(\"application/json\"));\r\n                Request request = new Request.Builder().url(serverURL+\"image\").post(body).build();\r\n\r\n                client.newCall(request).enqueue(new Callback() {\r\n                    @Override\r\n                    public void onFailure(@NotNull Call call, @NotNull IOException e) {\r\n                        call.cancel();\r\n                        Log.i(\"prueba\", e.toString());\r\n                        Log.i(\"prueba\", \"Ha fallado la conexión\");\r\n                    }\r\n\r\n                    @Override\r\n                    public void onResponse(@NotNull Call call, @NotNull Response response) throws IOException {\r\n                        //Log.i(\"prueba\", response.body().string());\r\n                        Log.i(\"prueba\", \"Imagen guardada en el servidor\");\r\n                    }\r\n                });\r\n            }\r\n        }).start();\r\n    }\r\n\r\n    public void getCapacity(final String capacity, final Listener listener){\r\n\r\n        new Thread(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                OkHttpClient client = new OkHttpClient();\r\n                Request request = new Request.Builder().url(serverURL+capacity).get().build();\r\n\r\n                client.newCall(request).enqueue(new Callback() {\r\n                    @Override\r\n                    public void onFailure(@NotNull Call call, @NotNull IOException e) {\r\n                        call.cancel();\r\n                        Log.i(\"prueba\", \"Ha fallado la conexión\");\r\n                    }\r\n\r\n                    @Override\r\n                    public void onResponse(@NotNull Call call, @NotNull Response response) throws IOException {\r\n                        String data = response.body().string();\r\n                        Log.i(\"prueba\", data);\r\n                        try {\r\n                            listener.receiveMessage(new JSONObject(data));\r\n                        } catch (JSONException e) {\r\n                            e.printStackTrace();\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }).start();\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/covidsafespaces/ServerConnection.java	(revision b49113b7f7d5aff45cd4428b57a2a859b34c5622)
+++ app/src/main/java/com/example/covidsafespaces/ServerConnection.java	(date 1603354736586)
@@ -45,8 +45,9 @@
 
 public class ServerConnection {
     //private final String serverURL = "http://paeaccenture.pagekite.me/";
-    private final String serverURL = "http://98972deb0cc1.eu.ngrok.io/";
+    //private final String serverURL = "http://98972deb0cc1.eu.ngrok.io/";
     //private final String serverURL = "http://192.168.1.202:5000/";
+    private final String serverURL = "http://147.83.50.15:5902/";
 
 
     public void postImage(final byte[] image, final String filename, final int rotation){
